60
package
;
.
import
class
interface
extends
implements
Identifier
IntegerLiteral
CharacterLiteral
StringLiteral
BooleanLiteral
NullLiteral
=
instanceof
||
&&
|
&
^
==
!=
<
>
<=
>=
+
-
*
/
%
!
byte
short
char
int
long
boolean
(
)
{
}
[
]
,
public
protected
static
abstract
final
native
new
if
else
for
while
return
this
void
93
CompilationUnit
PackageDeclaration
ImportDeclarations
ImportDeclaration
TypeDeclaration
ClassOrInterfaceDeclaration
ClassDeclaration
InterfaceDeclaration
SuperClass
SuperInterfaces
InterfaceTypeList
ModifiersOpt
Modifier
ClassModifiers
ClassModifier
ClassBody
InterfaceBody
InterfaceBodyDeclarations
ClassBodyDeclarations
ClassBodyDeclaration
ConstructorDeclaration
ClassMemberDeclaration
MethodDeclaration
MethodModifiers
FieldDeclaration
VariableDeclaratorRest
InterfaceBodyDeclaration
VariableDeclaratorId
VariableDeclaratorsRest
VariableDeclarator
Block
BlockStatements
BlockStatement
LocalVariableDeclarationStatement
Statement
StatementWithoutTrailingSubstatement
IfThenStatement
IfThenElseStatement
WhileStatement
ForStatement
EmptyStatement
ExpressionStatement
ReturnStatement
StatementNoShortIf
IfThenElseStatementNoShortIf
ForStatementNoShortIf
WhileStatementNoShortIf
StatementExpression
ForInit
ForUpdate
VariableInitializer
FormalParameters
FormalParameterList
FormalParameter
MethodHeader
MethodDeclarator
MethodBody
Result
QualifiedIdentifier
Literal
Expression
AssignmentExpression
Assignment
LeftHandSide
ConditionalAndExpression
ConditionalOrExpression
InclusiveOrExpression
ExclusiveOrExpression
AndExpression
EqualityExpression
RelationalExpression
RelationalOperator
AdditiveExpression
MultiplicativeExpression
MultiplicativeOperator
UnaryExpression
UnaryExpressionNotMinus
CastExpression
Primary
PrimaryNoNewArray
ArrayCreationExpression
ClassInstanceCreationExpression
MethodInvocation
FieldAccess
ArrayAccess
Type
Dims
PrimitiveType
NumericType
ReferenceType
ArrayType
Arguments
ArgumentList
CompilationUnit
173
CompilationUnit PackageDeclaration ImportDeclarations TypeDeclaration
PackageDeclaration
PackageDeclaration package QualifiedIdentifier ;
ImportDeclarations ImportDeclarations ImportDeclaration
ImportDeclaration import QualifiedIdentifier ;
ImportDeclaration import QualifiedIdentifier . * ;
TypeDeclaration ClassOrInterfaceDeclaration
TypeDeclaration ;
ClassOrInterfaceDeclaration ClassModifiers ClassDeclaration
ClassOrInterfaceDeclaration ClassModifiers InterfaceDeclaration
ClassModifiers
ClassModifiers ClassModifiers ClassModifier
ClassModifier public
ClassModifier abstract
ClassModifier final
ClassDeclaration class Identifier SuperClass SuperInterfaces ClassBody
SuperClass
SuperClass extends QualifiedIdentifier
SuperInterfaces
SuperInterfaces implements InterfaceTypeList
InterfaceDeclaration interface Identifier InterfaceBody
InterfaceDeclaration interface extends InterfaceTypeList InterfaceBody
InterfaceTypeList InterfaceTypeList , QualifiedIdentifier
InterfaceTypeList QualifiedIdentifier
ClassBody { ClassBodyDeclarations }
ClassBodyDeclarations ClassBodyDeclarations ClassBodyDeclaration
ClassBodyDeclarations ClassBodyDeclaration
ClassBodyDeclaration ModifiersOpt ClassMemberDeclaration
ClassMemberDeclaration ConstructorDeclaration
ClassMemberDeclaration MethodDeclaration
ClassMemberDeclaration FieldDeclaration
MethodDeclaration MethodHeader MethodBody
MethodDeclaration MethodModifiers MethodHeader MethodBody
MethodDeclaration static native int Identifier ( Type Identifier ) MethodBody
MethodHeader Type MethodDeclarator
MethodHeader void MethodDeclarator
MethodDeclarator Identifier FormalParameters
FieldDeclaration Type VariableDeclarator ;
InterfaceBody { InterfaceBodyDeclarations }
InterfaceBodyDeclarations InterfaceBodyDeclarations InterfaceBodyDeclaration
InterfaceBodyDeclarations InterfaceBodyDeclaration
InterfaceBodyDeclaration ;
InterfaceBodyDeclaration MethodDeclaration
InterfaceBodyDeclaration FieldDeclaration
ConstructorDeclaration Identifier FormalParameters MethodBody
FormalParameters ( )
FormalParameters ( FormalParameterList )
FormalParameterList FormalParameterList , FormalParameter
FormalParameterList FormalParameter
FormalParameter Type VariableDeclaratorId
MethodBody Block
MethodBody ;
VariableDeclarator Identifier VariableDeclaratorRest
VariableDeclaratorRest = VariableInitializer
VariableDeclaratorRest
VariableInitializer Expression
Block { BlockStatements }
BlockStatements BlockStatements BlockStatement
BlockStatements
BlockStatement LocalVariableDeclarationStatement
BlockStatement Statement
Statement StatementWithoutTrailingSubstatement
Statement IfThenStatement
Statement IfThenElseStatement
Statement WhileStatement
Statement ForStatement
StatementWithoutTrailingSubstatement Block
StatementWithoutTrailingSubstatement EmptyStatement
StatementWithoutTrailingSubstatement ReturnStatement
StatementNoShortIf StatementWithoutTrailingSubstatement
StatementNoShortIf IfThenElseStatementNoShortIf
StatementNoShortIf WhileStatementNoShortIf
StatementNoShortIf ForStatementNoShortIf
IfThenStatement if Statement
IfThenElseStatement if ( Expression ) StatementNoShortIf else Statement
IfThenElseStatementNoShortIf if ( Expression ) StatementNoShortIf else StatementNoShortIf
EmptyStatement ;
ExpressionStatement StatementExpression ;
StatementExpression Assignment
StatementExpression MethodInvocation
WhileStatement while ( Expression ) Statement
WhileStatementNoShortIf while ( Expression ) StatementNoShortIf
ForStatement for ( ForInit ; Expression ; ForUpdate ) Statement
ForStatementNoShortIf for ( ForInit ; Expression ; ForUpdate ) StatementNoShortIf
ForInit LocalVariableDeclarationStatement
LocalVariableDeclarationStatement Type Identifier = Expression
ForUpdate StatementExpression
ReturnStatement return ;
ReturnStatement return Expression ;
VariableDeclaratorId Identifier 
ModifiersOpt ModifiersOpt Modifier
ModifiersOpt
Modifier public
Modifier protected 
Modifier static
Modifier abstract
Modifier final
QualifiedIdentifier QualifiedIdentifier . Identifier
QualifiedIdentifier Identifier
Literal IntegerLiteral
Literal CharacterLiteral
Literal StringLiteral
Literal BooleanLiteral
Literal NullLiteral
Type ReferenceType
Type PrimitiveType
ReferenceType QualifiedIdentifier
ReferenceType ArrayType
ArrayType PrimitiveType Dims
Dims [ ]
PrimitiveType NumericType
PrimitiveType boolean
NumericType byte
NumericType short
NumericType char
NumericType int
Primary PrimaryNoNewArray
Primary ArrayCreationExpression
PrimaryNoNewArray Literal
PrimaryNoNewArray this
PrimaryNoNewArray ( Expression )
PrimaryNoNewArray ClassInstanceCreationExpression
PrimaryNoNewArray FieldAccess
PrimaryNoNewArray ArrayAccess
PrimaryNoNewArray MethodInvocation
ClassInstanceCreationExpression new QualifiedIdentifier ( ArgumentList )
FieldAccess Primary . Identifier
ArrayAccess PrimaryNoNewArray [ Expression ]
MethodInvocation QualifiedIdentifier ( ArgumentList )
ArrayCreationExpression new Type [ ]
ArrayCreationExpression new Type [ Expression ]
AssignmentExpression LeftHandSide = Expression
LeftHandSide Identifier
LeftHandSide FieldAccess
LeftHandSide ArrayAccess
ConditionalOrExpression ConditionalAndExpression
ConditionalOrExpression ConditionalOrExpression || ConditionalAndExpression
ConditionalAndExpression InclusiveOrExpression
ConditionalAndExpression ConditionalAndExpression && InclusiveOrExpression
InclusiveOrExpression ExclusiveOrExpression
InclusiveOrExpression InclusiveOrExpression | ExclusiveOrExpression
ExclusiveOrExpression AndExpression
ExclusiveOrExpression ExclusiveOrExpression ^ AndExpression
AndExpression EqualityExpression
AndExpression AndExpression & EqualityExpression
EqualityExpression RelationalExpression
EqualityExpression EqualityExpression == RelationalExpression
EqualityExpression EqualityExpression != RelationalExpression
RelationalExpression AdditiveExpression
RelationalExpression RelationalExpression RelationalOperator AdditiveExpression
RelationalExpression RelationalExpression instanceof ReferenceType
RelationalOperator <
RelationalOperator >
RelationalOperator <=
RelationalOperator >=
AdditiveExpression MultiplicativeExpression
AdditiveExpression AdditiveExpression + MultiplicativeExpression
AdditiveExpression AdditiveExpression - MultiplicativeExpression 
MultiplicativeExpression UnaryExpression
MultiplicativeExpression MultiplicativeExpression MultiplicativeOperator UnaryExpression
MultiplicativeOperator *
MultiplicativeOperator /
MultiplicativeOperator %
UnaryExpression - UnaryExpression
UnaryExpression UnaryExpressionNotMinus
UnaryExpressionNotMinus ! UnaryExpression
UnaryExpressionNotMinus CastExpression
UnaryExpressionNotMinus Primary 
CastExpression ( PrimitiveType ) UnaryExpression
CastExpression ( ReferenceType ) UnaryExpressionNotMinus
Arguments ( ArgumentList )
ArgumentList ArgumentList , Expression
ArgumentList Expression
